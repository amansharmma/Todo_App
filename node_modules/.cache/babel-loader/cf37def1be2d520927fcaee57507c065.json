{"ast":null,"code":"var _jsxFileName = \"/home/genius/learn/src/Todo_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport './Todo.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo_list = () => {\n  _s();\n\n  const [inputData, setInputData] = useState({\n    name: \"\",\n    task: \"\"\n  });\n  const [items, setItems] = useState([]);\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const addItem = () => {\n    if (inputData.name === \"\" && inputData.task === \"\") {\n      console.log(inputData);\n      alert(\"fill the data\");\n    } else if (inputData && !toggleSubmit) {\n      setItems(items.map((elem, ind) => {\n        if (ind === isEditItem) {\n          return { ...elem,\n            name: inputData.name,\n            task: inputData.task\n          };\n        }\n\n        return elem;\n      }));\n      setToggleSubmit(true);\n      setInputData({\n        name: \"\",\n        task: \"\"\n      });\n      setIsEditItem(null);\n    } else {\n      setItems([...items, inputData]);\n      setInputData({\n        name: \"\",\n        task: \"\"\n      });\n    }\n  };\n\n  const deleteItem = id => {\n    const rest = items.filter((elem, ind) => {\n      return ind !== id;\n    });\n    setItems(rest);\n  };\n\n  const editItem = id => {\n    const newEditItem = items.find((elem, ind) => {\n      return ind === id;\n    });\n    console.log(newEditItem);\n    setInputData({\n      name: newEditItem.name,\n      task: newEditItem.task\n    });\n    setToggleSubmit(false);\n    setIsEditItem(id);\n  }; // const delAll = () =>{\n  //     setItems([]);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Person Menager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"This is my task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inp\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"your name\",\n          className: \"inp\",\n          value: inputData.name,\n          onChange: e => setInputData({ ...inputData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 86\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"your task\",\n          className: \"rock\",\n          value: inputData.task,\n          onChange: e => setInputData({ ...inputData,\n            task: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 87\n        }, this), toggleSubmit ? /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Add-item\",\n          onClick: addItem,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Update-item\",\n          className: \"upd-btn\",\n          onClick: addItem,\n          children: \"Update Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rcorners1\",\n            children: items.map((elem, ind) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"marge\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: [\"Name = \", elem.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: [\"Task = \", elem.task]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      title: \"delete-item\",\n                      className: \"del-btn\",\n                      onClick: () => deleteItem(ind),\n                      children: \" Delete \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      title: \"Update-item\",\n                      className: \"upd-btn\",\n                      onClick: () => editItem(ind),\n                      children: \" Update \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 33\n                  }, this)\n                }, ind, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo_list, \"QohCF80sbvBXGECDa7lS/Nv3PXQ=\");\n\n_c = Todo_list;\nexport default Todo_list;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo_list\");","map":{"version":3,"sources":["/home/genius/learn/src/Todo_list.js"],"names":["React","useState","Card","Todo_list","inputData","setInputData","name","task","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","console","log","alert","map","elem","ind","deleteItem","id","rest","filter","editItem","newEditItem","find","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Card } from \"react-bootstrap\";\nimport './Todo.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nconst Todo_list = () => {\n    const [inputData, setInputData] = useState({name: \"\", task: \"\"});\n    const [items, setItems] = useState([]);\n    const [toggleSubmit, setToggleSubmit ] = useState(true);\n    const [isEditItem, setIsEditItem] = useState(null);\n\n    const addItem = () => {\n        if ((inputData.name === \"\")&&(inputData.task === \"\")){\n            console.log(inputData)\n            alert(\"fill the data\")\n\n        } else if(inputData && !toggleSubmit) {\n            setItems(items.map((elem, ind) => {\n                if (ind === isEditItem){\n                    return { ...elem, name: inputData.name, task: inputData.task }\n                }\n                return elem\n            }))\n\n            setToggleSubmit(true);\n            setInputData({name: \"\", task: \"\"}); \n            setIsEditItem(null)\n        }\n        else{\n            setItems([...items,inputData]);\n            setInputData({name: \"\", task: \"\"})      \n    }}\n\n    const deleteItem = (id) => {\n        \n        const rest = items.filter((elem,ind) => {\n            return ind !== id;\n        });\n\n        setItems(rest);\n    }\n\n    const editItem = (id) => {\n        const newEditItem = items.find((elem, ind) => {\n            return ind === id;\n        });\n\n        console.log(newEditItem);\n        setInputData({name: newEditItem.name, task: newEditItem.task}); \n        setToggleSubmit(false);\n        setIsEditItem(id)\n\n    }\n\n    // const delAll = () =>{\n    //     setItems([]);\n    // }\n\n    return (\n        <>\n        <div>\n            <h1>Person Menager</h1>\n            <h5>This is my task</h5>\n            <div className = \"inp\">\n             <input type = \"text\" placeholder = \"your name\" className = \"inp\"\n            value = {inputData.name} \n            onChange = {(e) => setInputData({...inputData, name: e.target.value})} /><br></br>\n             <input placeholder = \"your task\"  className = \"rock\"\n             value = {inputData.task} \n             onChange = {(e) => setInputData({...inputData, task : e.target.value})}/><br></br>\n             { \n                toggleSubmit ? <button title = \"Add-item\"  onClick = {addItem}>Add Task</button> : \n                <button title = \"Update-item\" className = \"upd-btn\" onClick = {addItem}>Update Item</button>\n                }\n             {/* <button title = \"Add-item\" onClick = {addItem}>add Item</button> */}\n             <Card variant=\"outlined\">{\n             <div className = \"rcorners1\">\n            \n                {\n                    items.map((elem,ind) => {\n                        return (\n                            <>\n                            <div key = {ind} className = \"small\">\n                                <div className = \"marge\">\n                                    <h3>Name = {elem.name}</h3>\n                                    <h3>Task = {elem.task}</h3>\n                                    {/* <h3>ID = {ind}</h3> */}\n                                    <button title = \"delete-item\" className = \"del-btn\" onClick = {() => deleteItem(ind) }> Delete </button>\n                                    <button title = \"Update-item\" className = \"upd-btn\" onClick = {() => editItem(ind) }> Update </button>\n                                </div>\n                            </div>\n                            </>\n                        )\n                    })\n                    \n                }\n                {/* <button title = \"delete-item\" onClick = {delAll }> Delete All</button> */}\n             </div>\n            }</Card>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Todo_list\n\n"]},"metadata":{},"sourceType":"module"}