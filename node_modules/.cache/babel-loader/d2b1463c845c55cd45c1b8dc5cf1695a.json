{"ast":null,"code":"var _jsxFileName = \"/home/genius/learn/src/Todo_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo_list = () => {\n  _s();\n\n  const [inputData, setInputData] = useState({\n    name: \"\",\n    task: \"\"\n  });\n  const [items, setItems] = useState([]);\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const addItem = () => {\n    if (!inputData) {} else if (inputData && !toggleSubmit) {} else {\n      setItems([...items, inputData]);\n      setInputData(\"\");\n    }\n  };\n\n  const deleteItem = id => {\n    // console.log(id);\n    const rest = items.filter((elem, ind) => {\n      return ind !== id;\n    });\n    setItems(rest);\n  };\n\n  const editItem = id => {\n    const newEditItem = items.find((elem, ind) => {\n      return ind === id;\n    });\n    console.log(newEditItem);\n    setToggleSubmit(false);\n    setInputData({\n      name: newEditItem.name,\n      task: newEditItem.task\n    });\n    setIsEditItem(id);\n  }; // const delAll = () =>{\n  //     setItems([]);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Person Menager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"This is my task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"your name\",\n          value: inputData.name,\n          onChange: e => setInputData({ ...inputData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"your task\",\n          value: inputData.task,\n          onChange: e => setInputData({ ...inputData,\n            task: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }, this), toggleSubmit ? /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Add-item\",\n          onClick: addItem,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Update-item\",\n          onClick: addItem,\n          children: \"Update Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show-item\",\n          children: items.map((elem, ind) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"User name = \", elem.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"User task = \", elem.task]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  title: \"delete-item\",\n                  onClick: () => deleteItem(ind),\n                  children: \" Delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  title: \"Update-item\",\n                  onClick: () => editItem(ind),\n                  children: \" Update \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this)]\n              }, ind, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo_list, \"QohCF80sbvBXGECDa7lS/Nv3PXQ=\");\n\n_c = Todo_list;\nexport default Todo_list;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo_list\");","map":{"version":3,"sources":["/home/genius/learn/src/Todo_list.js"],"names":["React","useState","Todo_list","inputData","setInputData","name","task","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","deleteItem","id","rest","filter","elem","ind","editItem","newEditItem","find","console","log","e","target","value","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nconst Todo_list = () => {\n    const [inputData, setInputData] = useState({name: \"\", task: \"\"});\n    const [items, setItems] = useState([]);\n    const [toggleSubmit, setToggleSubmit ] = useState(true);\n    const [isEditItem, setIsEditItem] = useState(null);\n    const addItem = () => {\n        if (!inputData){\n\n        }else if(inputData && !toggleSubmit) {\n\n        }\n        else{\n            setItems([...items,inputData]);\n            setInputData(\"\")      \n    }}\n\n    const deleteItem = (id) => {\n        // console.log(id);\n        const rest = items.filter((elem,ind) => {\n            return ind !== id;\n        });\n\n        setItems(rest);\n    }\n\n    const editItem = (id) => {\n        const newEditItem = items.find((elem, ind) => {\n            return ind === id;\n        });\n\n        console.log(newEditItem);\n        setToggleSubmit(false);\n        setInputData({name: newEditItem.name, task: newEditItem.task}); \n        setIsEditItem(id)\n\n    }\n\n    // const delAll = () =>{\n    //     setItems([]);\n    // }\n\n    return (\n        <>\n        <div>\n            <h1>Person Menager</h1>\n            <h5>This is my task</h5>\n            <div>\n             <input type = \"text\" placeholder = \"your name\" \n            value = {inputData.name} \n            onChange = {(e) => setInputData({...inputData, name: e.target.value})} />\n             <input placeholder = \"your task\" \n             value = {inputData.task} \n             onChange = {(e) => setInputData({...inputData, task : e.target.value})}/>\n             { \n                toggleSubmit ? <button title = \"Add-item\" onClick = {addItem}>Add</button> : \n                <button title = \"Update-item\" onClick = {addItem}>Update Item</button>\n                }\n             {/* <button title = \"Add-item\" onClick = {addItem}>add Item</button> */}\n             <div className = \"show-item\">\n            \n                {\n                    items.map((elem,ind) => {\n                        return (\n                            <>\n                            <div key = {ind}>\n                                <h3>User name = {elem.name}</h3>\n                                <h3>User task = {elem.task}</h3>\n\n\n                                <button title = \"delete-item\" onClick = {() => deleteItem(ind) }> Delete </button>\n                                <button title = \"Update-item\" onClick = {() => editItem(ind) }> Update </button>\n                                \n                            </div>\n                            </>\n                        )\n                    })\n                    \n                }\n                {/* <button title = \"delete-item\" onClick = {delAll }> Delete All</button> */}\n             </div>\n             \n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Todo_list\n\n"]},"metadata":{},"sourceType":"module"}