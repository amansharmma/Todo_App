{"ast":null,"code":"var _jsxFileName = \"/home/genius/learn/src/Todo_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Todo.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo_list = () => {\n  _s();\n\n  const [inputData, setInputData] = useState({\n    name: \"\",\n    task: \"\"\n  });\n  const [items, setItems] = useState([]);\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null); // const addItem = () => {\n  //     if ((inputData.name === \"\")&&(inputData.task === \"\")){\n  //         console.log(inputData)\n  //         alert(\"fill the data\")\n  //     } else if(inputData && !toggleSubmit) {\n  //         setItems(items.map((elem, ind) => {\n  //             if (ind === isEditItem){\n  //                 return { ...elem, name: inputData.name, task: inputData.task }\n  //             }\n  //             return elem\n  //         }))\n  //         setToggleSubmit(true);\n  //         setInputData({name: \"\", task: \"\"}); \n  //         setIsEditItem(null)\n  //     }\n  //     else{\n  //         setItems([...items,inputData]);\n  //         setInputData({name: \"\", task: \"\"})      \n  // }}\n  // const deleteItem = (id) => {\n  //     const rest = items.filter((elem,ind) => {\n  //         return ind !== id;\n  //     });\n  //     setItems(rest);\n  // }\n  // const editItem = (id) => {\n  //     const newEditItem = items.find((elem, ind) => {\n  //         return ind === id;\n  //     });\n  //     console.log(newEditItem);\n  //     setInputData({name: newEditItem.name, task: newEditItem.task}); \n  //     setToggleSubmit(false);\n  //     setIsEditItem(id)\n  // }\n  // const delAll = () =>{\n  //     setItems([]);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Person Menager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"This is my task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rock\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"your name\",\n          value: inputData.name,\n          onChange: e => setInputData({ ...inputData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"your task\",\n          value: inputData.task,\n          onChange: e => setInputData({ ...inputData,\n            task: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 90\n        }, this), toggleSubmit ? /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Add-item\",\n          onClick: addItem,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Update-item\",\n          onClick: addItem,\n          children: \"Update Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rcorners1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo_list, \"QohCF80sbvBXGECDa7lS/Nv3PXQ=\");\n\n_c = Todo_list;\nexport default Todo_list;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo_list\");","map":{"version":3,"sources":["/home/genius/learn/src/Todo_list.js"],"names":["React","useState","Todo_list","inputData","setInputData","name","task","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","e","target","value","addItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAO,sDAAP;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAAD,CAA1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAmCT,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C,CAJoB,CAMpB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,sBACI;AAAA,2BACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAG,MAAd;AAAqB,UAAA,WAAW,EAAG,WAAnC;AACA,UAAA,KAAK,EAAIE,SAAS,CAACE,IADnB;AAEA,UAAA,QAAQ,EAAKQ,CAAD,IAAOT,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeE,YAAAA,IAAI,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAA9B,WAAD;AAF/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAG6E;AAAA;AAAA;AAAA;AAAA,gBAH7E,eAII;AAAO,UAAA,WAAW,EAAG,WAArB;AACA,UAAA,KAAK,EAAIZ,SAAS,CAACG,IADnB;AAEA,UAAA,QAAQ,EAAKO,CAAD,IAAOT,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeG,YAAAA,IAAI,EAAGO,CAAC,CAACC,MAAF,CAASC;AAA/B,WAAD;AAF/B;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAM6E;AAAA;AAAA;AAAA;AAAA,gBAN7E,EAQQN,YAAY,gBAAG;AAAQ,UAAA,KAAK,EAAG,UAAhB;AAA2B,UAAA,OAAO,EAAIO,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBACZ;AAAQ,UAAA,KAAK,EAAG,aAAhB;AAA8B,UAAA,OAAO,EAAIA,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATR,eAYI;AAAK,UAAA,SAAS,EAAG;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA4CH,CAjGD;;GAAMd,S;;KAAAA,S;AAmGN,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react'\nimport './Todo.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nconst Todo_list = () => {\n    const [inputData, setInputData] = useState({name: \"\", task: \"\"});\n    const [items, setItems] = useState([]);\n    const [toggleSubmit, setToggleSubmit ] = useState(true);\n    const [isEditItem, setIsEditItem] = useState(null);\n\n    // const addItem = () => {\n    //     if ((inputData.name === \"\")&&(inputData.task === \"\")){\n    //         console.log(inputData)\n    //         alert(\"fill the data\")\n\n    //     } else if(inputData && !toggleSubmit) {\n    //         setItems(items.map((elem, ind) => {\n    //             if (ind === isEditItem){\n    //                 return { ...elem, name: inputData.name, task: inputData.task }\n    //             }\n    //             return elem\n    //         }))\n\n    //         setToggleSubmit(true);\n    //         setInputData({name: \"\", task: \"\"}); \n    //         setIsEditItem(null)\n    //     }\n    //     else{\n    //         setItems([...items,inputData]);\n    //         setInputData({name: \"\", task: \"\"})      \n    // }}\n\n    // const deleteItem = (id) => {\n        \n    //     const rest = items.filter((elem,ind) => {\n    //         return ind !== id;\n    //     });\n\n    //     setItems(rest);\n    // }\n\n    // const editItem = (id) => {\n    //     const newEditItem = items.find((elem, ind) => {\n    //         return ind === id;\n    //     });\n\n    //     console.log(newEditItem);\n    //     setInputData({name: newEditItem.name, task: newEditItem.task}); \n    //     setToggleSubmit(false);\n    //     setIsEditItem(id)\n\n    // }\n\n    // const delAll = () =>{\n    //     setItems([]);\n    // }\n\n    return (\n        <>\n        <div>\n            <h1>Person Menager</h1>\n            <h5>This is my task</h5>\n            <div className = \"rock\">\n                <input type = \"text\" placeholder = \"your name\" \n                value = {inputData.name} \n                onChange = {(e) => setInputData({...inputData, name: e.target.value})} /><br></br>\n                <input placeholder = \"your task\" \n                value = {inputData.task} \n                onChange = {(e) => setInputData({...inputData, task : e.target.value})}/><br></br>\n                { \n                    toggleSubmit ? <button title = \"Add-item\" onClick = {addItem}>Add Task</button> : \n                    <button title = \"Update-item\" onClick = {addItem}>Update Item</button>\n                    }\n             {/* <button title = \"Add-item\" onClick = {addItem}>add Item</button> */}\n                <div className = \"rcorners1\">\n            \n                {/* {\n                    items.map((elem,ind) => {\n                        return (\n                            <>\n                            <div key = {ind} className = \"small\">\n                                <div className = \"marge\">\n                                    <h3>Name = {elem.name}</h3>\n                                    <h3>Task = {elem.task}</h3>\n                                    {/* <h3>ID = {ind}</h3> */}\n                                    {/* <button title = \"delete-item\" onClick = {() => deleteItem(ind) }> Delete </button>\n                                    <button title = \"Update-item\" onClick = {() => editItem(ind) }> Update </button>\n                                </div>\n                            </div>\n                            </>\n                        )\n                    }) */}\n                    \n                {/* } */}\n                {/* <button title = \"delete-item\" onClick = {delAll }> Delete All</button> */}\n             </div>\n             \n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Todo_list\n\n"]},"metadata":{},"sourceType":"module"}